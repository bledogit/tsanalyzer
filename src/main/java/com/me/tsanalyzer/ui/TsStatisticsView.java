/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * TsStatisticsView.java
 *
 * Created on Sep 26, 2011, 8:43:04 AM
 */
package com.me.tsanalyzer.ui;

import com.me.tsnanalyzer.video.transport.Stream;
import com.me.tsnanalyzer.video.transport.TsStreamAnalyzer;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;
import java.awt.image.BufferedImage;
import java.text.NumberFormat;
import java.util.Map;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartFrame;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.PiePlot3D;
import org.jfree.data.general.DefaultPieDataset;

/**
 *
 * @author Jose Mortensen <josemortensen@gmail.com>
 */
public class TsStatisticsView extends javax.swing.JFrame {

    BufferedImage image;
    final int PAD = 30;
    Font font;
    NumberFormat numberFormat;
    TsStreamAnalyzer streamInfo;

    public TsStreamAnalyzer getStreamInfo() {
        return streamInfo;
    }

    public void setStreamInfo(TsStreamAnalyzer streamInfo) {
        this.streamInfo = streamInfo;
    }
    
    @Override
    public void paint(Graphics g) {
        super.paint(g);
        Graphics2D graphics2d = (Graphics2D) g;
        graphics2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING,
                RenderingHints.VALUE_ANTIALIAS_ON);
        createChartImage();
        graphics2d.drawImage(image, 0, 0, this);
    }

    private void createChartImage() {
        int width = getWidth();
        int height = getHeight();
        int cp = width / 2;
        int cq = height / 2;
        image = new BufferedImage(width, height, BufferedImage.TYPE_INT_RGB);
        Graphics2D g2 = image.createGraphics();
        
        DefaultPieDataset  ds = new DefaultPieDataset();
        Map<Integer, Stream> map = streamInfo.getStreams();
        for (Stream s: map.values()) {
            ds.setValue(""+s.getPid(), s.getCount());
        }
        
        
        JFreeChart chart = ChartFactory.createPieChart3D ("3D Pie Chart", ds, true,true,true);
        PiePlot3D p=(PiePlot3D)chart.getPlot();
        p.setForegroundAlpha(0.5f);
        ChartFrame frame1=new ChartFrame("3D Pie Chart",chart);
        frame1.setVisible(true);
        frame1.setSize(300,300);
        
        
        g2.dispose();
    }



    /** Creates new form TsStatisticsView */
    public TsStatisticsView() {
        initComponents();
        font = new Font("Book Antiqua", Font.BOLD, 20);
        numberFormat = NumberFormat.getPercentInstance();

    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setName("Form"); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TsStatisticsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TsStatisticsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TsStatisticsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TsStatisticsView.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new TsStatisticsView().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
